[{"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/index.js":"1","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/App.js":"2","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/pages/HomePage.js":"3","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/pages/AuthPage.js":"4","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Profile/UserProfile.js":"5","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Layout/Layout.js":"6","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Layout/MainNavigation.js":"7","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/StartingPage/StartingPageContent.js":"8","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Auth/AuthForm.js":"9","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Profile/ProfileForm.js":"10","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/contexts/AuthContext.js":"11"},{"size":399,"mtime":1661103259061,"results":"12","hashOfConfig":"13"},{"size":572,"mtime":1648643396000,"results":"14","hashOfConfig":"13"},{"size":171,"mtime":1648643396000,"results":"15","hashOfConfig":"13"},{"size":130,"mtime":1648643396000,"results":"16","hashOfConfig":"13"},{"size":278,"mtime":1648643396000,"results":"17","hashOfConfig":"13"},{"size":246,"mtime":1648643396000,"results":"18","hashOfConfig":"13"},{"size":885,"mtime":1661103937240,"results":"19","hashOfConfig":"13"},{"size":240,"mtime":1648643396000,"results":"20","hashOfConfig":"13"},{"size":3474,"mtime":1661104118121,"results":"21","hashOfConfig":"13"},{"size":642,"mtime":1661195980397,"results":"22","hashOfConfig":"13"},{"size":610,"mtime":1661102749000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jzvygh",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/index.js",[],["48","49"],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/App.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/pages/HomePage.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/pages/AuthPage.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Profile/UserProfile.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Layout/Layout.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Layout/MainNavigation.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/StartingPage/StartingPageContent.js",[],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Auth/AuthForm.js",["50"],"import { useContext, useRef, useState } from 'react';\n\nimport classes from './AuthForm.module.css';\nimport AuthContext from '../../contexts/AuthContext';\n\nconst FORM_TYPE = {\n  LOGIN: 'login',\n  SIGNUP: 'signup',\n};\n\nconst API_KEY = 'AIzaSyACv1RS7qaQfIVDRp4WE2xt9Djvl8h9BYQ'; // Public non-secret API key for the client\nconst SIGNUP_API_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\nconst LOGIN_API_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\n\nconst AuthForm = () => {\n  const [formType, setFormType] = useState(FORM_TYPE.LOGIN);\n  const [isLoading, setIsLoading] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setFormType(formType === FORM_TYPE.LOGIN ? FORM_TYPE.SIGNUP : FORM_TYPE.LOGIN);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const email = emailInputRef.current?.value;\n    const password = passwordInputRef.current?.value;\n\n    const authHelper = async () => {\n      setIsLoading(true);\n\n      let requestURL = '';\n      switch (formType) {\n        case FORM_TYPE.SIGNUP:\n          requestURL = SIGNUP_API_URL;\n          break;\n        case FORM_TYPE.LOGIN:\n          requestURL = LOGIN_API_URL;\n          break;\n      }\n\n      const response = await fetch(requestURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email, password, returnSecureToken: true,\n        }),\n      });\n\n      if (!response.ok) {\n        setIsLoading(false);\n        const data = await response.json();\n        const errorMessage = data.error?.message;\n        alert(errorMessage ?? `${formType === FORM_TYPE.LOGIN ? 'Login' : 'Signup'} failed`);\n        return;\n      }\n      setIsLoading(false);\n\n      if (formType === FORM_TYPE.SIGNUP) {\n        alert('Signup success!');\n        return;\n      }\n\n      if (formType === FORM_TYPE.LOGIN) {\n        alert('Authentication success!');\n        const data = await response.json();\n        console.log(data); // TODO: remove\n        const authToken = data.idToken;\n        authCtx.login(authToken);\n      }\n\n    };\n\n    authHelper();\n\n  };\n\n  return (\n      <section className={classes.auth}>\n        <h1>{formType === FORM_TYPE.LOGIN ? 'Login' : 'Sign Up'}</h1>\n        <form onSubmit={submitHandler}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Your Email</label>\n            <input type=\"email\" id=\"email\" required ref={emailInputRef}/>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"password\">Your Password</label>\n            <input type=\"password\" id=\"password\" required ref={passwordInputRef}/>\n          </div>\n          <div className={classes.actions}>\n            {!isLoading && (<>\n              <button>{formType === FORM_TYPE.LOGIN ? 'Login' : 'Create Account'}</button>\n              <button\n                  type=\"button\"\n                  className={classes.toggle}\n                  onClick={switchAuthModeHandler}\n              >\n                {formType === FORM_TYPE.LOGIN ?\n                    'Create new account' :\n                    'Login with existing account'}\n              </button>\n            </>)}\n          </div>\n        </form>\n      </section>\n  );\n};\n\nexport default AuthForm;\n","/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/components/Profile/ProfileForm.js",["51","52"],"/Users/pingleihe/Desktop/react-complete-guide/Authentication/src/contexts/AuthContext.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":36,"column":7,"nodeType":"59","messageId":"60","endLine":43,"endColumn":8},{"ruleId":"61","severity":1,"message":"62","line":7,"column":9,"nodeType":"63","messageId":"64","endLine":7,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":9,"column":9,"nodeType":"63","messageId":"64","endLine":9,"endColumn":24},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'AuthCtx' is assigned a value but never used.","Identifier","unusedVar","'onSubmitHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]